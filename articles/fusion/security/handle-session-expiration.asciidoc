---
title: Handling Session Expiration
order: 141
layout: page
---

= Handling Session Expiration

Use the built-in <<../advanced/client-middleware#, middleware>> `InvalidSessionMiddleWare` to detect session expiration. 
You could use this, for example, to show a login view to the user.

== How to Use the InvalidSessionMiddleWare

`InvalidSessionMiddleWare` requires `OnInvalidSessionCallback` as a constructor parameter.
`OnInvalidSessionCallback` is a function that takes no parameters and should return a promise of `LoginResult`.
`LoginResult` contains the metadata of a login result, including:

* `error`: indicates whether or not the login attempt has failed.
* `token`: in the event of a successful login, this is the CSRF token, which can be extracted from the `index.html` page.
* `errorTitle`: a short text describing a login error.
* `errorMessage`: a more detailed explanation of the login error.


.Example using `InvalidSessionMiddleWare`
[.example]
--
[source,typescript]
----
include::{root}/frontend/demo/fusion/authentication/handle-session-expiration/connect-client.ts[]
----
[source,typescript]
----
include::{root}/frontend/demo/fusion/authentication/handle-session-expiration/login-overlay-basic.ts[]
----
--
